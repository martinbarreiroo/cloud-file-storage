name: Main Branch CI

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Create .env.test file
        run: |
          echo "# Test database configuration" > .env.test
          echo "DB_TEST_USER=test" >> .env.test
          echo "DB_TEST_PASSWORD=test" >> .env.test
          echo "DB_TEST_NAME=cloud-file-storage-test" >> .env.test
          echo "DB_TEST_HOST=localhost" >> .env.test
          echo "DB_TEST_PORT=5433" >> .env.test
          echo "NODE_ENV=test" >> .env.test
          # Add JWT configuration for authentication
          echo "JWT_SECRET=test-jwt-secret-for-ci-environment" >> .env.test
          echo "JWT_EXPIRATION=1d" >> .env.test
      
      - name: Set up test database
        # Use Docker Compose V2 format which is pre-installed on GitHub runners
        run: docker compose up db-test -d
        
      - name: Wait for DB to be ready
        run: sleep 10
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Check formatting
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts"
        
      - name: Run tests
        run: npm test

      # Force database schema synchronization before e2e tests
      - name: Create database schema
        run: |
          node -e "
            const { DataSource } = require('typeorm');
            const dataSource = new DataSource({
              type: 'postgres',
              host: 'localhost',
              port: 5433,
              username: 'test',
              password: 'test',
              database: 'cloud-file-storage-test',
              synchronize: true
            });
            dataSource.initialize()
              .then(() => console.log('Schema synchronized'))
              .catch(err => console.error(err));
          "
        
      - name: Run e2e tests
        run: npm run test:e2e
        
      - name: Build project
        run: npm run build